diff --git a/.env b/.env
index 1947247..153f728 100644
--- a/.env
+++ b/.env
@@ -4,30 +4,18 @@ PROD_URL=https://next-100vh.vercel.app
 NEXTAUTH_URL=http://localhost:3000
 SECRET=4a7318d901d15aac32cbe1ac72642003
 
-APPLE_ID=
-APPLE_TEAM_ID=
-APPLE_PRIVATE_KEY=
-APPLE_KEY_ID=
-
-AUTH0_ID=
-AUTH0_SECRET=
-AUTH0_DOMAIN=
-
-FACEBOOK_ID=3019973551615435
-FACEBOOK_SECRET=b4c8d93250d738967230b20a025f7250
-
 GITHUB_ID=a4a8dad6854700bc4287
 GITHUB_SECRET=6b25563171e42559828b8b17fd48b1d0b3b39b95
 
 GITLAB_CLIENT_ID=5c22e8fdbdef7e047025d5abe4d32125e021cf1f1e7c282be8fd499b0f07d739
 GITLAB_CLIENT_SECRET=13a0e79bc58af2f9fc7025c104b06bc48172a1cb0f26e582400eaa5e8c362e62
 
+BITBUCKET_ID=K9KFm2uz9x5b6v3QdE
+BITBUCKET_SECRET=hfwBScSUeCpncHL63ahcRExeawsFCSww
+
 GOOGLE_ID=681577399635-dnrov1702drg5vuapi98qb962ds5bces.apps.googleusercontent.com
 GOOGLE_SECRET=I6yDingHcz5MY-jUXzaBnwk8
 
-TWITTER_ID=
-TWITTER_SECRET=
-
 EMAIL_SERVER=smtp://username:password@smtp.example.com.com:587
 EMAIL_FROM=NextAuth <noreply@example.com>
 
diff --git a/components/Navbar/DropdownToggle.tsx b/components/Navbar/DropdownToggle.tsx
index b51dd90..2429666 100644
--- a/components/Navbar/DropdownToggle.tsx
+++ b/components/Navbar/DropdownToggle.tsx
@@ -6,87 +6,78 @@ import { useEffect, useState } from "react";
 import Text100VH from "../UIKit/Text/Text100VH";
 
 export default function DropdownToggle({ session }) {
-    const [isHovering, setIsHovering] = useState(false);
+  const [isHovering, setIsHovering] = useState(false);
 
-    function growDiv() {
-        var growDiv = document.querySelector("#grow") as HTMLElement;
-        if (growDiv.clientHeight) {
-            growDiv.style.height = "0";
-        } else {
-            var wrapper = document.querySelector(
-                "#measuringWrapper"
-            ) as HTMLElement;
-            growDiv.style.height = wrapper.clientHeight + "px";
-        }
+  function growDiv() {
+    var growDiv = document.querySelector("#grow") as HTMLElement;
+    if (growDiv.clientHeight) {
+      growDiv.style.height = "0";
+    } else {
+      var wrapper = document.querySelector("#measuringWrapper") as HTMLElement;
+      growDiv.style.height = wrapper.clientHeight + "px";
     }
+  }
 
-    // useEffect(() => {
-    //     growDiv();
-    // }, []);
+  // useEffect(() => {
+  //     growDiv();
+  // }, []);
 
-    return (
-        <div
-            onMouseEnter={() => {
-                growDiv();
-                setIsHovering(true);
-            }}
-            onMouseLeave={() => {
-                growDiv();
-                setIsHovering(false);
-            }}
-            className={`relative flex flex-col font-extrabold cursor-pointer bg-gradient-to-br from-100vh-cyan to-100vh-purple mr-1`}
+  return (
+    <div
+      onMouseEnter={() => {
+        growDiv();
+        setIsHovering(true);
+      }}
+      onMouseLeave={() => {
+        growDiv();
+        setIsHovering(false);
+      }}
+      className={`relative flex flex-col font-extrabold cursor-pointer bg-gradient-to-br from-100vh-cyan to-100vh-purple mr-1`}
+      style={{ minWidth: "125px" }}
+    >
+      <div
+        className={`absolute w-full h-full flex transition-all duration-200 bg-100vh-gray ${
+          isHovering ? "opacity-0" : "opacity-100"
+        }`}
+      />
+      <div
+        className={`flex justify-start items-end flex-col bg-100vh-gray m-1`}
+        style={{ zIndex: 1 }}
+      >
+        <a
+          href={(session?.user as any)?.username}
+          className="flex items-center py-3 pl-4 pr-3"
         >
-            <div
-                className={`absolute flex transition-all duration-200 bg-100vh-gray ${
-                    isHovering ? "opacity-0" : "opacity-100"
-                }`}
-                style={{
-                    top: "-1px",
-                    left: "-1px",
-                    width: "calc(100% + 2px)",
-                    height: "calc(100% + 2px)",
-                }}
-            />
-            <div
-                className={`flex justify-start items-end flex-col bg-100vh-gray m-1`}
-                style={{ zIndex: 1 }}
-            >
-                <a
-                    href={(session?.user as any)?.username as string}
-                    className="flex items-center py-3 pl-4 pr-3"
-                >
-                    <p className="">
-                        {(session?.user as any)?.username as string}
-                    </p>
-                    {/* <img
+          <p className="">{(session?.user as any)?.username}</p>
+          {/* <img
                             className="rounded-full w-11 h-11"
                             src={
                                 session?.user.image ? session?.user.image : null
                             }
                         /> */}
-                </a>
-                <div
-                    id="grow"
-                    className="w-full bg-100vh-gray"
-                    style={{
-                        transition: "height .25s",
-                        height: 0,
-                        overflow: "hidden",
-                        // outline: "1px solid red",
-                    }}
-                >
-                    <div
-                        id="measuringWrapper"
-                        className="flex flex-col items-end mr-3 text-base text-white"
-                    >
-                        <div
-                            className="flex w-full mb-2 transition-all bg-gradient-to-br to-100vh-cyan from-100vh-purple"
-                            style={{
-                                height: "3px",
-                                width: isHovering ? "calc(100% - 16px)" : "0px",
-                            }}
-                        />
-                        {/* <div className="relative flex">
+        </a>
+        <div
+          id="grow"
+          className="w-full bg-100vh-gray"
+          style={{
+            transition: "height .25s",
+            height: 0,
+            overflow: "hidden",
+            // outline: "1px solid red",
+          }}
+        >
+          <div
+            id="measuringWrapper"
+            className="flex flex-col items-end mr-3 text-base text-white"
+          >
+            <div
+              className="flex w-full mb-2 transition-all bg-gradient-to-br to-100vh-cyan from-100vh-purple"
+              style={{
+                height: "3px",
+                width: isHovering ? "calc(100% - 16px)" : "0px",
+              }}
+            />
+            {/* <div className="relative flex">
                                 <div className={`relative flex group`}>
                                     <p className="absolute text-transparent transition-opacity duration-300 group-hover:opacity-0 bg-clip-text bg-gradient-to-br from-100vh-cyan to-100vh-purple">
                                         {"profile"}
@@ -96,91 +87,83 @@ export default function DropdownToggle({ session }) {
                                     </p>
                                 </div>
                             </div> */}
-                        <DropDownItem
-                            label="profile"
-                            className="mb-2"
-                            isLink={true}
-                            href={`/${(session.user as any).username}`}
-                        />
-                        <DropDownItem
-                            label="settings"
-                            className="mb-2"
-                            isLink={true}
-                            href="/settings"
-                        />
-                        <DropDownItem
-                            label="sign out"
-                            className="mb-3"
-                            onClick={() => signOut()}
-                        />
-                    </div>
-                </div>
-            </div>
+            <DropDownItem
+              label="profile"
+              className="mb-2"
+              isLink={true}
+              href={`/${(session.user as any).username}`}
+            />
+            <DropDownItem
+              label="settings"
+              className="mb-2"
+              isLink={true}
+              href="/settings"
+            />
+            <DropDownItem
+              label="sign out"
+              className="mb-3"
+              onClick={() => signOut()}
+            />
+          </div>
         </div>
-    );
+      </div>
+    </div>
+  );
 }
 
 function DropDownItem({
-    label,
-    className = "",
-    isLink = false,
-    href = "",
-    onClick = () => {},
+  label,
+  className = "",
+  isLink = false,
+  href = "",
+  onClick = () => {},
 }) {
-    const [isHovering, setIsHovering] = useState(false);
+  const [isHovering, setIsHovering] = useState(false);
 
-    if (isLink && href) {
-        return (
-            <a
-                href={href}
-                onClick={onClick}
-                onMouseEnter={() => setIsHovering(true)}
-                onMouseLeave={() => setIsHovering(false)}
-                className={`relative w-full items-center justify-end flex ${
-                    className ? className : ""
-                }`}
-            >
-                <p
-                    className={`transition-opacity ${
-                        isHovering ? "opacity-0" : ""
-                    }`}
-                >
-                    {label}
-                </p>
-                <p
-                    className={`absolute text-transparent transition-opacity duration-300 opacity-0 ${
-                        isHovering ? "opacity-100" : ""
-                    } bg-clip-text bg-gradient-to-br from-100vh-cyan to-100vh-purple`}
-                >
-                    {label}
-                </p>
-            </a>
-        );
-    } else {
-        return (
-            <div
-                onClick={onClick}
-                onMouseEnter={() => setIsHovering(true)}
-                onMouseLeave={() => setIsHovering(false)}
-                className={`relative w-full items-center justify-end flex ${
-                    className ? className : ""
-                }`}
-            >
-                <p
-                    className={`transition-opacity ${
-                        isHovering ? "opacity-0" : ""
-                    }`}
-                >
-                    {label}
-                </p>
-                <p
-                    className={`absolute text-transparent transition-opacity duration-300 opacity-0 ${
-                        isHovering ? "opacity-100" : ""
-                    } bg-clip-text bg-gradient-to-br from-100vh-cyan to-100vh-purple`}
-                >
-                    {label}
-                </p>
-            </div>
-        );
-    }
+  if (isLink && href) {
+    return (
+      <a
+        href={href}
+        onClick={onClick}
+        onMouseEnter={() => setIsHovering(true)}
+        onMouseLeave={() => setIsHovering(false)}
+        className={`relative w-full items-center justify-end flex ${
+          className ? className : ""
+        }`}
+      >
+        <p className={`transition-opacity ${isHovering ? "opacity-0" : ""}`}>
+          {label}
+        </p>
+        <p
+          className={`absolute text-transparent transition-opacity duration-300 opacity-0 ${
+            isHovering ? "opacity-100" : ""
+          } bg-clip-text bg-gradient-to-br from-100vh-cyan to-100vh-purple`}
+        >
+          {label}
+        </p>
+      </a>
+    );
+  } else {
+    return (
+      <div
+        onClick={onClick}
+        onMouseEnter={() => setIsHovering(true)}
+        onMouseLeave={() => setIsHovering(false)}
+        className={`relative w-full items-center justify-end flex ${
+          className ? className : ""
+        }`}
+      >
+        <p className={`transition-opacity ${isHovering ? "opacity-0" : ""}`}>
+          {label}
+        </p>
+        <p
+          className={`absolute text-transparent transition-opacity duration-300 opacity-0 ${
+            isHovering ? "opacity-100" : ""
+          } bg-clip-text bg-gradient-to-br from-100vh-cyan to-100vh-purple`}
+        >
+          {label}
+        </p>
+      </div>
+    );
+  }
 }
diff --git a/components/UserProfile/About.tsx b/components/UserProfile/About.tsx
index 65242c1..f26c22f 100644
--- a/components/UserProfile/About.tsx
+++ b/components/UserProfile/About.tsx
@@ -3,47 +3,44 @@ import TimeAgo from "javascript-time-ago";
 import ReactTimeAgo from "react-time-ago";
 
 export default function About({ bio, createdAt }) {
-    return (
-        <div className="flex flex-col items-center justify-start w-full text-white">
-            {createdAt ? (
-                <>
-                    {bio && (
-                        <div className="flex flex-col w-full animate-fadeIn">
-                            <h2 className="mt-3 mb-2 text-lg font-bold">bio</h2>
-                            <p>{bio}</p>
-                        </div>
-                    )}
+  return (
+    <div className="flex flex-col items-center justify-start w-full text-white animate-fadeIn">
+      {createdAt ? (
+        <>
+          {bio && (
+            <div className="flex flex-col w-full">
+              <h2 className="mt-3 mb-2 text-lg font-bold">bio</h2>
+              <p>{bio}</p>
+            </div>
+          )}
 
-                    <p className="mt-20 text-sm opacity-70">
-                        member since{" "}
-                        <ReactTimeAgo
-                            date={new Date(createdAt)}
-                            timeStyle="twitter"
-                        />
-                    </p>
-                </>
-            ) : (
-                <svg
-                    className={`w-6 h-6 animate-spin mx-auto mt-24`}
-                    style={{ color: "282828" }}
-                    fill="none"
-                    viewBox="0 0 24 24"
-                >
-                    <circle
-                        className="opacity-10"
-                        cx="12"
-                        cy="12"
-                        r="10"
-                        stroke="currentColor"
-                        strokeWidth="4"
-                    ></circle>
-                    <path
-                        className="opacity-75"
-                        fill="currentColor"
-                        d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
-                    ></path>
-                </svg>
-            )}
-        </div>
-    );
+          <p className="mt-20 text-sm opacity-70">
+            member since{" "}
+            <ReactTimeAgo date={new Date(createdAt)} timeStyle="twitter" />
+          </p>
+        </>
+      ) : (
+        <svg
+          className={`w-6 h-6 animate-spin mx-auto mt-24`}
+          style={{ color: "282828" }}
+          fill="none"
+          viewBox="0 0 24 24"
+        >
+          <circle
+            className="opacity-10"
+            cx="12"
+            cy="12"
+            r="10"
+            stroke="currentColor"
+            strokeWidth="4"
+          ></circle>
+          <path
+            className="opacity-75"
+            fill="currentColor"
+            d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
+          ></path>
+        </svg>
+      )}
+    </div>
+  );
 }
diff --git a/pages/api/auth/[...nextauth].ts b/pages/api/auth/[...nextauth].ts
index 3570b06..dac32eb 100644
--- a/pages/api/auth/[...nextauth].ts
+++ b/pages/api/auth/[...nextauth].ts
@@ -5,15 +5,15 @@ import Providers from "next-auth/providers";
 import Models from "../../../models";
 
 export default NextAuth({
-    // https://next-auth.js.org/configuration/providers
-    providers: [
-        // Providers.Email({
-        //     server: process.env.EMAIL_SERVER,
-        //     from: process.env.EMAIL_FROM,
-        // }),
-        // Temporarily removing the Apple provider from the demo site as the
-        // callback URL for it needs updating due to Vercel changing domains
-        /*
+  // https://next-auth.js.org/configuration/providers
+  providers: [
+    // Providers.Email({
+    //     server: process.env.EMAIL_SERVER,
+    //     from: process.env.EMAIL_FROM,
+    // }),
+    // Temporarily removing the Apple provider from the demo site as the
+    // callback URL for it needs updating due to Vercel changing domains
+    /*
       Providers.Apple({
         clientId: process.env.APPLE_ID,
         clientSecret: {
@@ -24,172 +24,137 @@ export default NextAuth({
         },
       }),
       */
-        // Providers.Facebook({
-        //     clientId: process.env.FACEBOOK_ID,
-        //     clientSecret: process.env.FACEBOOK_SECRET,
-        // }),
-        Providers.GitHub({
-            clientId: process.env.GITHUB_ID,
-            clientSecret: process.env.GITHUB_SECRET,
-            // https://docs.github.com/en/developers/apps/building-oauth-apps/scopes-for-oauth-apps
-            scope: "read:user repo",
-        }),
-        Providers.GitLab({
-            clientId: process.env.GITLAB_CLIENT_ID,
-            clientSecret: process.env.GITLAB_CLIENT_SECRET,
-        }),
-        Providers.Google({
-            clientId: process.env.GOOGLE_ID,
-            clientSecret: process.env.GOOGLE_SECRET,
-        }),
-        // Providers.Twitter({
-        //     clientId: process.env.TWITTER_ID,
-        //     clientSecret: process.env.TWITTER_SECRET,
-        // }),
-        // Providers.Auth0({
-        //     clientId: process.env.AUTH0_ID,
-        //     clientSecret: process.env.AUTH0_SECRET,
-        //     domain: process.env.AUTH0_DOMAIN,
-        // }),
-    ],
-    // Database optional. MySQL, Maria DB, Postgres and MongoDB are supported.
-    // https://next-auth.js.org/configuration/databases
-    //
-    // Notes:
-    // * You must install an appropriate node_module for your database
-    // * The Email provider requires a database (OAuth providers do not)
-    // database: process.env.DATABASE_URL,
-
-    // The secret should be set to a reasonably long random string.
-    // It is used to sign cookies and to sign and encrypt JSON Web Tokens, unless
-    // a separate secret is defined explicitly for encrypting the JWT.
-    secret: process.env.SECRET,
-    session: {
-        // Use JSON Web Tokens for session instead of database sessions.
-        // This option can be used with or without a database for users/accounts.
-        // Note: `jwt` is automatically set to `true` if no database is specified.
-        jwt: true,
-
-        // Seconds - How long until an idle session expires and is no longer valid.
-        maxAge: 30 * 24 * 60 * 60, // 30 days
-
-        // Seconds - Throttle how frequently to write to database to extend a session.
-        // Use it to limit write operations. Set to 0 to always update the database.
-        // Note: This option is ignored if using JSON Web Tokens
-        // updateAge: 24 * 60 * 60, // 24 hours
+    // Providers.Facebook({
+    //     clientId: process.env.FACEBOOK_ID,
+    //     clientSecret: process.env.FACEBOOK_SECRET,
+    // }),
+    Providers.GitHub({
+      clientId: process.env.GITHUB_ID,
+      clientSecret: process.env.GITHUB_SECRET,
+      // https://docs.github.com/en/developers/apps/building-oauth-apps/scopes-for-oauth-apps
+      scope: "read:user repo",
+    }),
+    Providers.GitLab({
+      clientId: process.env.GITLAB_CLIENT_ID,
+      clientSecret: process.env.GITLAB_CLIENT_SECRET,
+    }),
+    {
+      id: "bitbucket",
+      name: "BitBucket",
+      type: "oauth",
+      version: "2.0",
+      scope: "account repository",
+      params: { grant_type: "authorization_code" },
+      accessTokenUrl: "https://bitbucket.org/site/oauth2/access_token",
+      authorizationUrl:
+        "https://bitbucket.org/site/oauth2/authorize/?response_type=code",
+      profileUrl: "https://api.bitbucket.org/2.0/user",
+      async profile(profile: any, tokens: any) {
+        console.log("Profile ", profile);
+        console.log("Tokens ", tokens);
+
+        if (profile && tokens) {
+          const res = await fetch(
+            "https://api.bitbucket.org/2.0/user/emails?access_token=" +
+              tokens.access_token
+          );
+          const resJson = await res.json();
+
+          if (res.status === 200) {
+            return {
+              id: profile.account_id,
+              name: profile.display_name || null,
+              email: resJson.values[0].email,
+              image: profile.links.avatar.href,
+            };
+          }
+        }
+
+        return {
+          id: profile.account_id,
+          name: profile.display_name || null,
+          email: null,
+          image: profile.links.avatar.href,
+        };
+      },
+      clientId: process.env.BITBUCKET_ID as string,
+      clientSecret: process.env.BITBUCKET_SECRET as string,
     },
-
-    // JSON Web tokens are only used for sessions if the `jwt: true` session
-    // option is set - or by default if no database is specified.
-    // https://next-auth.js.org/configuration/options#jwt
-    jwt: {
-        // A secret to use for key generation (you should set this explicitly)
-        // secret: 'INp8IvdIyeMcoGAgFGoA61DdBglwwSqnXJZkgz8PSnw',
-        // Set to true to use encryption (default: false)
-        // encryption: true,
-        // You can define your own encode/decode functions for signing and encryption
-        // if you want to override the default behaviour.
-        // encode: async ({ secret, token, maxAge }) => {},
-        // decode: async ({ secret, token, maxAge }) => {},
+    Providers.Google({
+      clientId: process.env.GOOGLE_ID,
+      clientSecret: process.env.GOOGLE_SECRET,
+    }),
+  ],
+  secret: process.env.SECRET,
+  session: {
+    jwt: true,
+
+    // Seconds - How long until an idle session expires and is no longer valid.
+    maxAge: 30 * 24 * 60 * 60, // 30 days
+
+    // Seconds - Throttle how frequently to write to database to extend a session.
+    // Use it to limit write operations. Set to 0 to always update the database.
+    // Note: This option is ignored if using JSON Web Tokens
+    // updateAge: 24 * 60 * 60, // 24 hours
+  },
+  pages: {
+    signIn: "/signin", // Displays signin buttons
+    newUser: "/signup/new", // If set, new users will be directed here on first sign in
+
+    // signOut: "/", // Displays form with sign out button
+    // error: '/auth/error', // Error code passed in query string as ?error=
+    // verifyRequest: '/auth/verify-request', // Used for check email page
+  },
+  callbacks: {
+    // async signIn(user, account, profile) { return true },
+    // async redirect(url, baseUrl) { return baseUrl },
+    async session(session, token) {
+      // console.log("6", session);
+      // console.log("7", token);
+
+      if (token.user) {
+        session.user = token.user as any;
+      }
+      return session;
     },
-
-    // You can define custom pages to override the built-in ones. These will be regular Next.js pages
-    // so ensure that they are placed outside of the '/api' folder, e.g. signIn: '/auth/mycustom-signin'
-    // The routes shown here are the default URLs that will be used when a custom
-    // pages is not specified for that route.
-    // https://next-auth.js.org/configuration/pages
-    pages: {
-        signIn: "/signin", // Displays signin buttons
-        // signOut: "/", // Displays form with sign out button
-        // error: '/auth/error', // Error code passed in query string as ?error=
-        // verifyRequest: '/auth/verify-request', // Used for check email page
-        // newUser: null // If set, new users will be directed here on first sign in
+    async jwt(token, user, account, profile, isNewUser) {
+      // console.log("1", token);
+      // console.log("2", user);
+      // console.log("3", account);
+      // console.log("4", profile);
+      // console.log("5", isNewUser);
+
+      if (user?.email) {
+        const res = await fetch(
+          `${
+            process.env.NODE_ENV === "production"
+              ? process.env.PROD_URL
+              : "http://localhost:3000"
+          }/api/users/getByEmail/` + user?.email
+        );
+
+        if (res.status === 200) {
+          const resJson = await res.json();
+
+          token.user = resJson;
+        }
+      }
+      return token;
     },
-
-    // Callbacks are asynchronous functions you can use to control what happens
-    // when an action is performed.
-    // https://next-auth.js.org/configuration/callbacks
-    callbacks: {
-        // async signIn(user, account, profile) { return true },
-        // async redirect(url, baseUrl) { return baseUrl },
-        async session(session, token) {
-            // console.log("4", token);
-            // console.log("5", session);
-
-            // (session.user as any).username =
-            //     user.username || (session.user as any).username;
-            // (session.user as any).projectLikes =
-            //     user.projectLikes || (session.user as any).projectLikes;
-            // (session.user as any).following =
-            //     user.following || (session.user as any).following;
-            // (session.user as any).followers =
-            //     user.followers || (session.user as any).followers;
-            // (session.user as any).bio = user.bio || (session.user as any).bio;
-            // (session.user as any).skills =
-            //     user.skills || (session.user as any).skills;
-            // (session.user as any).createdAt =
-            //     user.createdAt || (session.user as any).createdAt;
-            // (session.user as any).image =
-            //     user.image || (session.user as any).image;
-            // (session.user as any).isVerified =
-            //     user.isVerified || (session.user as any).isVerified;
-            if (token.user) {
-                session.user = token.user as any;
-            }
-            return session;
-        },
-        async jwt(token, user, account, profile, isNewUser) {
-            // console.log("1", token);
-            // console.log("2", user);
-            // console.log("3", profile);
-            // console.log(account);
-
-            // console.log(user);
-            // console.log((user as any)?.username);
-
-            if (user?.email) {
-                const res = await fetch(
-                    `${
-                        process.env.NODE_ENV === "production"
-                            ? process.env.PROD_URL
-                            : "http://localhost:3000"
-                    }/api/users/getByEmail/` + user?.email
-                );
-
-                if (res.status === 200) {
-                    const resJson = await res.json();
-
-                    token.user = resJson;
-                }
-            }
-
-            //   token.username = token.username || (user as any)?.username || null;
-            //   token.projectLikes =
-            //     token.projectLikes || (user as any).projectLikes || null;
-
-            // if (typeof user !== typeof undefined) {
-            //     token.user = user;
-            // }
-            return token;
-        },
+  },
+
+  // Events are useful for logging
+  // https://next-auth.js.org/configuration/events
+  events: {},
+  theme: "dark",
+
+  debug: false,
+  adapter: Adapters.TypeORM.Adapter(process.env.DATABASE_URL as string, {
+    models: {
+      Account: Adapters.TypeORM.Models.Account,
+      Session: Adapters.TypeORM.Models.Session,
+      VerificationRequest: Adapters.TypeORM.Models.VerificationRequest,
+      User: Models.User as any,
     },
-
-    // Events are useful for logging
-    // https://next-auth.js.org/configuration/events
-    events: {},
-
-    // You can set the theme to 'light', 'dark' or use 'auto' to default to the
-    // whatever prefers-color-scheme is set to in the browser. Default is 'auto'
-    theme: "dark",
-
-    // Enable debug messages in the console if you are having problems
-    debug: false,
-    adapter: Adapters.TypeORM.Adapter(process.env.DATABASE_URL as string, {
-        models: {
-            Account: Adapters.TypeORM.Models.Account,
-            Session: Adapters.TypeORM.Models.Session,
-            VerificationRequest: Adapters.TypeORM.Models.VerificationRequest,
-            User: Models.User as any,
-        },
-    }),
+  }),
 });
diff --git a/pages/signin.tsx b/pages/signin.tsx
index e8f314b..61d58af 100644
--- a/pages/signin.tsx
+++ b/pages/signin.tsx
@@ -5,187 +5,181 @@ import { useState } from "react";
 import { FaGithub, FaGitlab } from "react-icons/fa";
 import { FcGoogle } from "react-icons/fc";
 import { HiOutlineMail } from "react-icons/hi";
+import { IoLogoBitbucket } from "react-icons/io";
 import Navbar from "../components/Navbar/Navbar";
 
 export async function getServerSideProps(context) {
-    const csrfToken = await getCsrfToken(context);
-    const providers = await getProviders();
+  const csrfToken = await getCsrfToken(context);
+  const providers = await getProviders();
 
-    return {
-        props: { csrfToken, providers },
-    };
+  return {
+    props: { csrfToken, providers },
+  };
 }
 
 function parseError(error) {
-    if (error === "OAuthAccountNotLinked") {
-        return "Email already in use by other OAuth account";
-    } else if (error === "OAuthCreateAccount") {
-        return "Failed to save OAuth account to database";
-    } else if (error === "EmailCreateAccount") {
-        return "Failed to save account to database";
-    } else if (error === "EmailSignin") {
-        return "Failed to send verification email";
-    } else {
-        return error;
-    }
+  if (error === "OAuthAccountNotLinked") {
+    return "Email already in use by other OAuth account";
+  } else if (error === "OAuthCreateAccount") {
+    return "Failed to save OAuth account to database";
+  } else if (error === "EmailCreateAccount") {
+    return "Failed to save account to database";
+  } else if (error === "EmailSignin") {
+    return "Failed to send verification email";
+  } else {
+    return error;
+  }
 }
 
 export default function SignIn({ csrfToken, providers }) {
-    const router = useRouter();
-    const { query } = router;
-    const { error } = query;
+  const router = useRouter();
+  const { query } = router;
+  const { error } = query;
 
-    return (
+  return (
+    <div
+      className="flex flex-col items-center justify-center w-full min-h-screen bg-100vh-gray"
+      style={{ paddingTop: "92px" }}
+    >
+      <Navbar />
+      <div className="flex flex-col items-center justify-center flex-1 w-full px-2 text-white">
         <div
-            className="flex flex-col items-center justify-center w-full min-h-screen bg-100vh-gray"
-            style={{ paddingTop: "92px" }}
+          className="flex flex-col items-center justify-center w-full animate-fadeIn"
+          style={{ maxWidth: "320px" }}
         >
-            <Navbar />
-            <div className="flex flex-col items-center justify-center flex-1 w-full px-2 text-white">
-                <div
-                    className="flex flex-col items-center justify-center w-full"
-                    style={{ maxWidth: "320px" }}
-                >
-                    {error ? (
-                        <div className="flex items-center justify-center w-full py-3 text-center text-red-600">
-                            <p>{parseError(error)}</p>
-                        </div>
-                    ) : null}
+          {error ? (
+            <div className="flex items-center justify-center w-full py-3 text-center text-red-600">
+              <p>{parseError(error)}</p>
+            </div>
+          ) : null}
 
-                    <ProviderButton
-                        bg="#333333"
-                        hoverBg="#555555"
-                        provider="github"
-                        lightText={true}
-                    />
+          <h2 className="self-start mb-4 text-3xl font-bold">sign in</h2>
 
-                    <ProviderButton
-                        bg="#6b4fbb"
-                        hoverBg="#8367D3"
-                        provider="gitlab"
-                        className="my-3"
-                        lightText={true}
-                    />
+          <ProviderButton
+            bg="#333333"
+            hoverBg="#555555"
+            provider="github"
+            className="mb-3"
+            lightText={true}
+          />
 
-                    <ProviderButton
-                        bg="#ffffff"
-                        hoverBg="#c9c9c9"
-                        provider="google"
-                    />
+          <ProviderButton
+            bg="#6b4fbb"
+            hoverBg="#8367D3"
+            provider="gitlab"
+            className="mb-3"
+            lightText={true}
+          />
 
-                    <div
-                        className="w-full my-5 bg-gradient-to-br from-100vh-cyan to-100vh-purple"
-                        style={{ height: "2px" }}
-                    />
+          <ProviderButton
+            bg="#0052CC"
+            hoverBg="#1668E2"
+            provider="bitbucket"
+            className="mb-3"
+            lightText={true}
+          />
 
-                    {/* <button
-                        className="relative flex items-center justify-center w-full px-2 py-3 text-lg font-medium text-black transition-opacity hover:opacity-80"
-                        style={{ backgroundColor: "#ffffff" }}
-                        onMouseEnter={(e) =>
-                            ((e.target as HTMLElement).style.backgroundColor =
-                                "#c9c9c9")
-                        }
-                        onMouseLeave={(e) =>
-                            ((e.target as HTMLElement).style.backgroundColor =
-                                "#ffffff")
-                        }
-                    >
-                        <HiOutlineMail className="absolute mr-2 text-3xl left-2" />
-                        <p>email</p>
-                    </button> */}
-                    <ProviderButton
-                        bg="#ffffff"
-                        hoverBg="#c9c9c9"
-                        provider="email"
-                        isEmail={true}
-                    />
-                </div>
-            </div>
+          <ProviderButton bg="#ffffff" hoverBg="#c9c9c9" provider="google" />
+
+          <div
+            className="w-full my-5 bg-gradient-to-br from-100vh-cyan to-100vh-purple"
+            style={{ height: "2px" }}
+          />
+
+          <ProviderButton
+            bg="#ffffff"
+            hoverBg="#c9c9c9"
+            provider="email"
+            isEmail={true}
+          />
         </div>
-    );
+      </div>
+    </div>
+  );
 }
 
 interface ProviderButton {
-    bg: string;
-    hoverBg: string;
-    provider: string;
-    className?: string;
-    lightText?: boolean;
-    isEmail?: boolean;
+  bg: string;
+  hoverBg: string;
+  provider: string;
+  className?: string;
+  lightText?: boolean;
+  isEmail?: boolean;
 }
 function ProviderButton({
-    bg,
-    hoverBg,
-    provider,
-    className,
-    lightText = false,
-    isEmail = false,
+  bg,
+  hoverBg,
+  provider,
+  className,
+  lightText = false,
+  isEmail = false,
 }: ProviderButton) {
-    const [isLoading, setIsloading] = useState(false);
+  const [isLoading, setIsloading] = useState(false);
 
-    function getProvderImage(provider) {
-        if (provider === "github") {
-            return <FaGithub className="absolute mr-2 text-3xl left-2" />;
-        } else if (provider === "gitlab") {
-            return <FaGitlab className="absolute mr-2 text-3xl left-2" />;
-        } else if (provider === "google") {
-            return <FcGoogle className="absolute mr-2 text-3xl left-2" />;
-        } else if (provider === "email") {
-            return <HiOutlineMail className="absolute mr-2 text-3xl left-2" />;
-        }
+  function getProviderImage(provider) {
+    if (provider === "github") {
+      return <FaGithub className="absolute mr-2 text-3xl left-2" />;
+    } else if (provider === "gitlab") {
+      return <FaGitlab className="absolute mr-2 text-3xl left-2" />;
+    } else if (provider === "bitbucket") {
+      return <IoLogoBitbucket className="absolute mr-2 text-3xl left-2" />;
+    } else if (provider === "google") {
+      return <FcGoogle className="absolute mr-2 text-3xl left-2" />;
+    } else if (provider === "email") {
+      return <HiOutlineMail className="absolute mr-2 text-3xl left-2" />;
     }
+  }
 
-    return (
-        <button
-            className={`relative flex items-center justify-center w-full px-2 text-lg font-medium ${
-                lightText ? "text-white" : "text-black"
-            } transition-colors ${className ? className : ""}`}
-            style={{ backgroundColor: bg, height: "48px" }}
-            onMouseEnter={(e) =>
-                ((e.target as HTMLElement).style.backgroundColor = hoverBg)
-            }
-            onMouseLeave={(e) =>
-                ((e.target as HTMLElement).style.backgroundColor = bg)
-            }
-            onClick={() => {
-                setIsloading(true);
-                if (!isEmail) {
-                    signIn(provider, {
-                        callbackUrl:
-                            process.env.NODE_ENV === "production"
-                                ? process.env.PROD_URL
-                                : "http://localhost:3000",
-                    });
-                }
-            }}
+  return (
+    <button
+      className={`relative flex items-center justify-center w-full px-2 text-lg font-medium ${
+        lightText ? "text-white" : "text-black"
+      } transition-colors ${className ? className : ""}`}
+      style={{ backgroundColor: bg, height: "48px" }}
+      onMouseEnter={(e) =>
+        ((e.target as HTMLElement).style.backgroundColor = hoverBg)
+      }
+      onMouseLeave={(e) =>
+        ((e.target as HTMLElement).style.backgroundColor = bg)
+      }
+      onClick={() => {
+        setIsloading(true);
+        if (!isEmail) {
+          signIn(provider, {
+            callbackUrl:
+              process.env.NODE_ENV === "production"
+                ? process.env.PROD_URL
+                : "http://localhost:3000",
+          });
+        }
+      }}
+    >
+      {getProviderImage(provider)}
+      {isLoading ? (
+        <svg
+          className={`w-6 h-6 ${
+            lightText ? "text-white" : "text-black"
+          } animate-spin`}
+          fill="none"
+          viewBox="0 0 24 24"
         >
-            {getProvderImage(provider)}
-            {isLoading ? (
-                // <svg className="w-5 h-5 animate-spin" viewBox="0 0 24 24" />
-                <svg
-                    className={`w-6 h-6 ${
-                        lightText ? "text-white" : "text-black"
-                    } animate-spin`}
-                    fill="none"
-                    viewBox="0 0 24 24"
-                >
-                    <circle
-                        className="opacity-10"
-                        cx="12"
-                        cy="12"
-                        r="10"
-                        stroke="currentColor"
-                        strokeWidth="4"
-                    ></circle>
-                    <path
-                        className="opacity-75"
-                        fill="currentColor"
-                        d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
-                    ></path>
-                </svg>
-            ) : (
-                <p>{provider}</p>
-            )}
-        </button>
-    );
+          <circle
+            className="opacity-10"
+            cx="12"
+            cy="12"
+            r="10"
+            stroke="currentColor"
+            strokeWidth="4"
+          ></circle>
+          <path
+            className="opacity-75"
+            fill="currentColor"
+            d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
+          ></path>
+        </svg>
+      ) : (
+        <p className="select-none">{provider}</p>
+      )}
+    </button>
+  );
 }
diff --git a/pages/signup/index.tsx b/pages/signup/index.tsx
index 2bf4446..76661f7 100644
--- a/pages/signup/index.tsx
+++ b/pages/signup/index.tsx
@@ -4,80 +4,88 @@ import { useState } from "react";
 import { FaGithub, FaGitlab } from "react-icons/fa";
 import { FcGoogle } from "react-icons/fc";
 import { HiOutlineMail } from "react-icons/hi";
+import { IoLogoBitbucket } from "react-icons/io";
 import Navbar from "../../components/Navbar/Navbar";
 
 export async function getServerSideProps(context) {
-    const csrfToken = await getCsrfToken(context);
-    const providers = await getProviders();
+  const csrfToken = await getCsrfToken(context);
+  const providers = await getProviders();
 
-    return {
-        props: { csrfToken, providers },
-    };
+  return {
+    props: { csrfToken, providers },
+  };
 }
 
 function parseError(error) {
-    if (error === "OAuthAccountNotLinked") {
-        return "Email already in use by other OAuth account";
-    } else if (error === "OAuthCreateAccount") {
-        return "Failed to save OAuth account to database";
-    } else if (error === "EmailCreateAccount") {
-        return "Failed to save account to database";
-    } else if (error === "EmailSignin") {
-        return "Failed to send verification email";
-    } else {
-        return error;
-    }
+  if (error === "OAuthAccountNotLinked") {
+    return "Email already in use by other OAuth account";
+  } else if (error === "OAuthCreateAccount") {
+    return "Failed to save OAuth account to database";
+  } else if (error === "EmailCreateAccount") {
+    return "Failed to save account to database";
+  } else if (error === "EmailSignin") {
+    return "Failed to send verification email";
+  } else {
+    return error;
+  }
 }
 
 export default function SignUp({ csrfToken, providers }) {
-    const router = useRouter();
-    const { query } = router;
-    const { error } = query;
+  const router = useRouter();
+  const { query } = router;
+  const { error } = query;
 
-    return (
+  return (
+    <div
+      className="flex flex-col items-center justify-center w-full min-h-screen bg-100vh-gray"
+      style={{ paddingTop: "92px" }}
+    >
+      <Navbar />
+      <div className="flex flex-col items-center justify-center flex-1 w-full px-2 text-white">
         <div
-            className="flex flex-col items-center justify-center w-full min-h-screen bg-100vh-gray"
-            style={{ paddingTop: "92px" }}
+          className="flex flex-col items-center justify-center w-full animate-fadeIn"
+          style={{ maxWidth: "320px" }}
         >
-            <Navbar />
-            <div className="flex flex-col items-center justify-center flex-1 w-full px-2 text-white">
-                <div
-                    className="flex flex-col items-center justify-center w-full"
-                    style={{ maxWidth: "320px" }}
-                >
-                    {error ? (
-                        <div className="flex items-center justify-center w-full py-3 text-center text-red-600">
-                            <p>{parseError(error)}</p>
-                        </div>
-                    ) : null}
+          {error ? (
+            <div className="flex items-center justify-center w-full py-3 text-center text-red-600">
+              <p>{parseError(error)}</p>
+            </div>
+          ) : null}
+
+          <h2 className="self-start mb-4 text-3xl font-bold">sign up</h2>
+
+          <ProviderButton
+            bg="#333333"
+            hoverBg="#555555"
+            provider="github"
+            className="mb-3"
+            lightText={true}
+          />
 
-                    <ProviderButton
-                        bg="#333333"
-                        hoverBg="#555555"
-                        provider="github"
-                        lightText={true}
-                    />
+          <ProviderButton
+            bg="#6b4fbb"
+            hoverBg="#8367D3"
+            provider="gitlab"
+            className="mb-3"
+            lightText={true}
+          />
 
-                    <ProviderButton
-                        bg="#6b4fbb"
-                        hoverBg="#8367D3"
-                        provider="gitlab"
-                        className="my-3"
-                        lightText={true}
-                    />
+          <ProviderButton
+            bg="#0052CC"
+            hoverBg="#1668E2"
+            provider="bitbucket"
+            className="mb-3"
+            lightText={true}
+          />
 
-                    <ProviderButton
-                        bg="#ffffff"
-                        hoverBg="#c9c9c9"
-                        provider="google"
-                    />
+          <ProviderButton bg="#ffffff" hoverBg="#c9c9c9" provider="google" />
 
-                    <div
-                        className="w-full my-5 bg-gradient-to-br from-100vh-cyan to-100vh-purple"
-                        style={{ height: "2px" }}
-                    />
+          <div
+            className="w-full my-5 bg-gradient-to-br from-100vh-cyan to-100vh-purple"
+            style={{ height: "2px" }}
+          />
 
-                    {/* <button
+          {/* <button
                         className="relative flex items-center justify-center w-full px-2 py-3 text-lg font-medium text-black transition-opacity hover:opacity-80"
                         style={{ backgroundColor: "#ffffff" }}
                         onMouseEnter={(e) =>
@@ -92,102 +100,95 @@ export default function SignUp({ csrfToken, providers }) {
                         <HiOutlineMail className="absolute mr-2 text-3xl left-2" />
                         <p>email</p>
                     </button> */}
-                    <ProviderButton
-                        bg="#ffffff"
-                        hoverBg="#c9c9c9"
-                        provider="email"
-                        isEmail={true}
-                    />
-                </div>
-            </div>
+          <ProviderButton
+            bg="#ffffff"
+            hoverBg="#c9c9c9"
+            provider="email"
+            isEmail={true}
+          />
         </div>
-    );
+      </div>
+    </div>
+  );
 }
 
 interface ProviderButton {
-    bg: string;
-    hoverBg: string;
-    provider: string;
-    className?: string;
-    lightText?: boolean;
-    isEmail?: boolean;
+  bg: string;
+  hoverBg: string;
+  provider: string;
+  className?: string;
+  lightText?: boolean;
+  isEmail?: boolean;
 }
 function ProviderButton({
-    bg,
-    hoverBg,
-    provider,
-    className,
-    lightText = false,
-    isEmail = false,
+  bg,
+  hoverBg,
+  provider,
+  className,
+  lightText = false,
+  isEmail = false,
 }: ProviderButton) {
-    const [isLoading, setIsloading] = useState(false);
+  const [isLoading, setIsloading] = useState(false);
 
-    function getProviderImage(provider) {
-        if (provider === "github") {
-            return <FaGithub className="absolute mr-2 text-3xl left-2" />;
-        } else if (provider === "gitlab") {
-            return <FaGitlab className="absolute mr-2 text-3xl left-2" />;
-        } else if (provider === "google") {
-            return <FcGoogle className="absolute mr-2 text-3xl left-2" />;
-        } else if (provider === "email") {
-            return <HiOutlineMail className="absolute mr-2 text-3xl left-2" />;
-        }
+  function getProviderImage(provider) {
+    if (provider === "github") {
+      return <FaGithub className="absolute mr-2 text-3xl left-2" />;
+    } else if (provider === "gitlab") {
+      return <FaGitlab className="absolute mr-2 text-3xl left-2" />;
+    } else if (provider === "bitbucket") {
+      return <IoLogoBitbucket className="absolute mr-2 text-3xl left-2" />;
+    } else if (provider === "google") {
+      return <FcGoogle className="absolute mr-2 text-3xl left-2" />;
+    } else if (provider === "email") {
+      return <HiOutlineMail className="absolute mr-2 text-3xl left-2" />;
     }
+  }
 
-    return (
-        <button
-            className={`relative flex items-center justify-center w-full px-2 text-lg font-medium ${
-                lightText ? "text-white" : "text-black"
-            } transition-colors ${className ? className : ""}`}
-            style={{ backgroundColor: bg, height: "48px" }}
-            onMouseEnter={(e) =>
-                ((e.target as HTMLElement).style.backgroundColor = hoverBg)
-            }
-            onMouseLeave={(e) =>
-                ((e.target as HTMLElement).style.backgroundColor = bg)
-            }
-            onClick={() => {
-                setIsloading(true);
-                if (!isEmail) {
-                    signIn(provider, {
-                        callbackUrl:
-                            process.env.NODE_ENV === "production"
-                                ? process.env.PROD_URL +
-                                  "/signup/new?provider=" +
-                                  provider
-                                : "http://localhost:3000/signup/new?provider=" +
-                                  provider,
-                    });
-                }
-            }}
+  return (
+    <button
+      className={`relative flex items-center justify-center w-full px-2 text-lg font-medium ${
+        lightText ? "text-white" : "text-black"
+      } transition-colors ${className ? className : ""}`}
+      style={{ backgroundColor: bg, height: "48px" }}
+      onMouseEnter={(e) =>
+        ((e.target as HTMLElement).style.backgroundColor = hoverBg)
+      }
+      onMouseLeave={(e) =>
+        ((e.target as HTMLElement).style.backgroundColor = bg)
+      }
+      onClick={() => {
+        setIsloading(true);
+        if (!isEmail) {
+          signIn(provider);
+        }
+      }}
+    >
+      {getProviderImage(provider)}
+      {isLoading ? (
+        <svg
+          className={`w-6 h-6 ${
+            lightText ? "text-white" : "text-black"
+          } animate-spin`}
+          fill="none"
+          viewBox="0 0 24 24"
         >
-            {getProviderImage(provider)}
-            {isLoading ? (
-                // <svg className="w-5 h-5 animate-spin" viewBox="0 0 24 24" />
-                <svg
-                    className={`w-6 h-6 ${
-                        lightText ? "text-white" : "text-black"
-                    } animate-spin`}
-                    fill="none"
-                    viewBox="0 0 24 24"
-                >
-                    <circle
-                        className="opacity-10"
-                        cx="12"
-                        cy="12"
-                        r="10"
-                        stroke="currentColor"
-                        strokeWidth="4"
-                    ></circle>
-                    <path
-                        className="opacity-75"
-                        fill="currentColor"
-                        d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
-                    ></path>
-                </svg>
-            ) : (
-                <p>{provider}</p>
-            )}
-        </button>
-    );
+          <circle
+            className="opacity-10"
+            cx="12"
+            cy="12"
+            r="10"
+            stroke="currentColor"
+            strokeWidth="4"
+          ></circle>
+          <path
+            className="opacity-75"
+            fill="currentColor"
+            d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
+          ></path>
+        </svg>
+      ) : (
+        <p className="select-none">{provider}</p>
+      )}
+    </button>
+  );
 }
diff --git a/pages/signup/new.tsx b/pages/signup/new.tsx
index 5d68d10..fa3bfd6 100644
--- a/pages/signup/new.tsx
+++ b/pages/signup/new.tsx
@@ -1,138 +1,170 @@
 import { getSession, signIn, useSession } from "next-auth/client";
 import { useRouter } from "next/dist/client/router";
+import Link from "next/link";
 import { useEffect } from "react";
 import { useState } from "react";
 import Navbar from "../../components/Navbar/Navbar";
 import Button100VH from "../../components/UIKit/Buttons/Button100VH";
 
 export async function getServerSideProps(context) {
-    const session = await getSession(context);
-
-    if ((session?.user as any)?.username) {
-        return {
-            redirect: {
-                destination: "/",
-                permanent: false,
-            },
-        };
-    } else {
-        return {
-            props: {},
-        };
-    }
+  const session = await getSession(context);
+
+  if ((session?.user as any)?.username) {
+    return {
+      redirect: {
+        destination: "/",
+        permanent: false,
+      },
+    };
+  } else {
+    return {
+      props: {},
+    };
+  }
 }
 
 export default function New() {
-    const router = useRouter();
-    const { query } = router;
-    const { error, provider } = query;
+  const router = useRouter();
+  const { query } = router;
+  const { error, provider } = query;
 
-    const [isLoading, setIsLoading] = useState(false);
-    const [username, setUsername] = useState("");
+  const [isLoading, setIsLoading] = useState(false);
+  const [username, setUsername] = useState("");
 
-    const [isAvailable, setIsAvailable] = useState(false);
+  const [isAvailable, setIsAvailable] = useState(false);
 
-    const [session, loading] = useSession();
+  const invalidKeys: Array<string> = ["Space"];
 
-    async function handleInput(e) {
-        setUsername(e.target.value);
-        // setIsLoading(true);
-        await validateUsername(e.target.value);
-    }
+  //   async function handleKeyDown(e) {
+  //     if (!invalidKeys.includes(e.code)) {
+  //     }
+  //     setUsername(username + e.key);
 
-    async function validateUsername(username) {
-        const res = await fetch("/api/validateUsername/" + username);
-        const { isAvailable } = await res.json();
-        setIsAvailable(isAvailable);
+  //     // setIsLoading(true);
+  //     await validateUsername(e.target.value);
+  //   }
 
-        console.log(isAvailable);
-    }
+  const usernameRegex = new RegExp(
+    "^[a-zA-Z0-9]([._-](?![._-])|[a-zA-Z0-9]){0,18}[a-zA-Z0-9]$"
+  );
+
+  async function handleInput(e) {
+    console.log("value ", e.target.value, usernameRegex.test(e.target.value));
+    // if (e.target.value > 2) {
+    //   if (usernameRegex.test(e.target.value)) {
+    //     setUsername(e.target.value);
+    //   } else {
+    //     e.preventDefault();
+    //   }
+    // } else {
+    //   setUsername(e.target.value);
+    // }
+
+    setUsername(e.target.value);
+
+    // setIsLoading(true);
+    await validateUsername(e.target.value);
+  }
+
+  async function validateUsername(username) {
+    const res = await fetch("/api/validateUsername/" + username);
+    const { isAvailable } = await res.json();
+    setIsAvailable(isAvailable);
+
+    console.log("isAvailable ", isAvailable);
+  }
+
+  async function handleSubmit() {
+    const res = await fetch("/api/user/setUsername/" + username);
 
-    async function handleSubmit() {
-        const res = await fetch("/api/user/setUsername/" + username);
-
-        if (res.status === 200) {
-            await getSession();
-            // router.push("/");
-            signIn(provider as string, {
-                callbackUrl:
-                    process.env.NODE_ENV === "production"
-                        ? process.env.PROD_URL
-                        : "http://localhost:3000",
-            });
-        }
+    if (res.status === 200) {
+      await getSession();
+      signIn(provider as string, {
+        callbackUrl:
+          process.env.NODE_ENV === "production"
+            ? process.env.PROD_URL
+            : "http://localhost:3000",
+      });
     }
+  }
 
-    return (
-        <div className="flex flex-col items-center justify-center w-full min-h-screen bg-100vh-gray">
-            <div className="flex mt-8" style={{ width: "95%" }}>
-                <a className="text-5xl font-black text-transparent transition-opacity duration-300 md:text-6xl hover:opacity-40 bg-clip-text bg-gradient-to-br from-100vh-cyan to-100vh-purple">
-                    100vh
-                </a>
-            </div>
-            <div className="flex flex-col items-center justify-start flex-1 w-11/12 px-2 text-white">
-                <h1 className="self-start w-11/12 mt-20 text-6xl font-extrabold md:w-3/4 xl:w-1/2 lg:text-7xl">
-                    thank you for signing up for 100vh.
-                </h1>
-                {/* <p className="self-start mt-5 text-xl">one last step...</p> */}
-                <h2 className="self-start w-11/12 mt-5 text-6xl font-semibold">
-                    please enter your username
-                </h2>
-                <div className="flex flex-col items-center justify-center flex-1 my-3">
-                    <div
-                        className="flex items-center self-start"
-                        style={{ minHeight: "28px" }}
-                    >
-                        {isLoading ? (
-                            <svg
-                                className={`mr-auto w-4 h-4 mb-2 ml-2 text-white animate-spin`}
-                                fill="none"
-                                viewBox="0 0 24 24"
-                            >
-                                <circle
-                                    className="opacity-10"
-                                    cx="12"
-                                    cy="12"
-                                    r="10"
-                                    stroke="currentColor"
-                                    strokeWidth="3"
-                                ></circle>
-                                <path
-                                    className="opacity-75"
-                                    fill="currentColor"
-                                    d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
-                                ></path>
-                            </svg>
-                        ) : null}
-                        {username.length > 0 && !isLoading ? (
-                            <p
-                                className={`self-start mb-1 ${
-                                    isAvailable
-                                        ? "text-green-500"
-                                        : "text-red-600"
-                                }`}
-                            >
-                                {isAvailable ? "available" : "taken"}
-                            </p>
-                        ) : null}
-                    </div>
-                    <div className="flex items-center">
-                        <input
-                            onChange={handleInput}
-                            value={username}
-                            type="text"
-                            placeholder="username"
-                            className="px-4 py-3 mr-2 text-2xl text-white placeholder-gray-400 outline-none"
-                            style={{ backgroundColor: "#333333" }}
-                        />
-                        <Button100VH
-                            styleType={2}
-                            label="submit"
-                            onClick={handleSubmit}
-                        />
-                    </div>
-                </div>
-            </div>
+  return (
+    <div className="flex flex-col items-center justify-center w-full min-h-screen bg-100vh-gray">
+      <div className="flex mt-8" style={{ width: "95%" }}>
+        <Link href="/">
+          <a className="text-5xl font-black text-transparent transition-opacity duration-300 md:text-6xl hover:opacity-40 bg-clip-text bg-gradient-to-br from-100vh-cyan to-100vh-purple">
+            100vh
+          </a>
+        </Link>
+      </div>
+      <div className="flex flex-col items-center justify-start flex-1 w-11/12 px-2 text-white">
+        <h1 className="self-start w-11/12 mt-20 text-6xl font-extrabold md:w-3/4 xl:w-1/2 lg:text-7xl">
+          thank you for signing up for 100vh.
+        </h1>
+        {/* <p className="self-start mt-5 text-xl">one last step...</p> */}
+        <h2 className="self-start w-11/12 mt-5 text-6xl font-semibold">
+          please enter your username
+        </h2>
+        <div className="flex flex-col items-center justify-center flex-1 my-3">
+          <div
+            className="flex items-center self-start"
+            style={{ minHeight: "28px" }}
+          >
+            {isLoading ? (
+              <svg
+                className={`mr-auto w-4 h-4 mb-2 ml-2 text-white animate-spin`}
+                fill="none"
+                viewBox="0 0 24 24"
+              >
+                <circle
+                  className="opacity-10"
+                  cx="12"
+                  cy="12"
+                  r="10"
+                  stroke="currentColor"
+                  strokeWidth="3"
+                ></circle>
+                <path
+                  className="opacity-75"
+                  fill="currentColor"
+                  d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
+                ></path>
+              </svg>
+            ) : null}
+            {username.length > 0 && !isLoading ? (
+              <p
+                className={`self-start mb-1 ${
+                  isAvailable ? "text-green-500" : "text-red-600"
+                }`}
+              >
+                {isAvailable ? "available" : "taken"}
+              </p>
+            ) : null}
+          </div>
+          <div className="relative flex items-center">
+            <input
+              onChange={handleInput}
+              value={username}
+              type="text"
+              placeholder="username"
+              className="px-4 py-3 text-2xl text-white placeholder-gray-400 outline-none"
+              style={{ backgroundColor: "#333333" }}
+              pattern="[A-Za-z]{3}"
+            />
+            <button
+              disabled={!isAvailable && username.length > 0}
+              onClick={handleSubmit}
+              className={`absolute duration-300 left-full ml-2 flex font-extrabold transition-opacity cursor-pointer group bg-gradient-to-br from-100vh-cyan to-100vh-purple ${
+                isAvailable && username.length > 0 ? "opacity-100" : "opacity-0"
+              }`}
+            >
+              <div className="flex justify-center w-full px-5 py-3 m-1 transition-colors duration-300 bg-100vh-gray hover:bg-transparent">
+                submit
+              </div>
+            </button>
+          </div>
         </div>
-    );
+      </div>
+    </div>
+  );
 }
diff --git a/pages/upload.tsx b/pages/upload.tsx
index ef1e351..e3d3357 100644
--- a/pages/upload.tsx
+++ b/pages/upload.tsx
@@ -8,155 +8,141 @@ import TimeAgo from "javascript-time-ago";
 import ReactTimeAgo from "react-time-ago";
 import en from "javascript-time-ago/locale/en";
 import Button100VH from "../components/UIKit/Buttons/Button100VH";
+import FromGitRepo from "../components/Upload/FromGitRepo";
+import UploadFiles from "../components/Upload/UploadFiles";
 TimeAgo.addDefaultLocale(en);
 
 export default function Upload() {
-    const [repos, setRepos] = useState([]);
-    const session = useSession();
+  const [repos, setRepos] = useState([]);
+  const session = useSession();
 
-    async function fetchRepos() {
-        const repoFetch = await fetch(
-            "/api/upload/github/getRepos/" + "maxwellfortney"
-        );
-        setRepos(await repoFetch.json());
-    }
+  async function fetchRepos() {
+    const repoFetch = await fetch(
+      "/api/upload/github/getRepos/" + "maxwellfortney"
+    );
+    setRepos(await repoFetch.json());
+  }
 
-    useEffect(() => {
-        if (session) {
-            fetchRepos();
-        }
-    }, []);
+  useEffect(() => {
+    if (session) {
+      fetchRepos();
+    }
+  }, []);
 
-    return (
+  return (
+    <div
+      className="flex flex-col items-center justify-center w-full min-h-screen bg-100vh-gray"
+      style={{ paddingTop: "92px" }}
+    >
+      <Navbar />
+      <div className="flex flex-col items-center justify-center flex-1 w-full text-white">
+        <h1 className="mt-12 text-4xl font-black text-center">
+          Show the world what
+          <br /> youΓÇÖre working on
+        </h1>
+        <p className="mt-2 text-sm text-gray-400">create a new project</p>
         <div
-            className="flex flex-col items-center justify-center w-full min-h-screen bg-100vh-gray"
-            style={{ paddingTop: "92px" }}
+          className="flex items-center justify-center w-full"
+          style={{
+            maxHeight: "calc(100vh - 248px)",
+            minHeight: "calc(100vh - 248px)",
+          }}
         >
-            <Navbar />
-            <div className="flex flex-col items-center justify-center flex-1 w-full text-white">
-                <h1 className="mt-12 text-4xl font-black text-center">
-                    Show the world what
-                    <br /> youΓÇÖre working on
-                </h1>
-                <p className="mt-2 text-sm text-gray-400">
-                    import from a git repo or upload your code
-                </p>
-                <div
-                    className="flex items-center justify-center w-full"
-                    style={{
-                        maxHeight: "calc(100vh - 248px)",
-                        minHeight: "calc(100vh - 248px)",
-                    }}
-                >
-                    <div className="flex-1 h-full">c</div>
-                    <div
-                        className="flex items-center justify-center w-3/4 h-full py-7"
-                        style={{
-                            maxHeight: "calc(100vh - 248px)",
-                            minHeight: "313px",
-                            height: "calc(100vh - 248px)",
-                        }}
-                    >
-                        <div className="relative flex flex-col items-center justify-start flex-1 h-full px-3 py-2 mr-auto border-2 border-dashed rounded-md">
-                            <div className="flex flex-col w-full h-full mb-2 overflow-y-auto">
-                                {/* <div className="absolute bottom-0 z-10 flex w-full h-1/5 bg-gradient-to-r from-black to-transparent" /> */}
-                                {repos.length > 0 ? (
-                                    repos.map((repo: any) => (
-                                        <RepoButton
-                                            key={repo.name}
-                                            repo={repo}
-                                        />
-                                    ))
-                                ) : (
-                                    <div className="m-auto loader"></div>
-                                )}
-                            </div>
-                            <div className="mr-auto text-sm text-transparent bg-clip-text bg-gradient-to-br from-100vh-cyan to-100vh-purple">
-                                import from git url ΓåÆ
-                            </div>
-                        </div>
-                        <div className="flex flex-col items-center justify-center flex-none w-1/2 h-full p-4 ml-4 text-sm border-2 border-dashed rounded-md">
-                            <div className="flex flex-col items-center justify-center flex-1 w-full">
-                                <img
-                                    src="/images/gradient-image.svg"
-                                    className="w-2/5"
-                                    alt="gradient image icon"
-                                />
-                                <ul className="w-5/6 list-disc text-start mt-7">
-                                    <li>code (HTML, CSS, JavaScript)</li>
-                                    <li>images (png, jpg, gif)</li>
-                                </ul>
-                                <ul className="w-5/6 list-disc text-start">
-                                    <li>videos (mp4, 10mb max)</li>
-                                    <li>
-                                        only upload media you own the rights to
-                                    </li>
-                                </ul>
-                            </div>
-                            <button className="text-transparent bg-clip-text bg-gradient-to-br from-100vh-cyan to-100vh-purple">
-                                drag and drop or browse
-                            </button>
-                        </div>
-                    </div>
-                    <div className="flex-1 h-full">b</div>
-                </div>
+          <div className="flex-1 h-full">c</div>
+          <div
+            className="grid w-10/12 grid-cols-2 gap-6 xl:w-3/4 py-7 h-3/4"
+            style={{
+              maxHeight: "calc((100vh - 248px) * .8)",
+              minHeight: "313px",
+              height: "calc((100vh - 248px) * .8)",
+            }}
+          >
+            <FromGitRepo />
+            <UploadFiles />
+            {/* <div className="relative flex flex-col items-center justify-start flex-1 h-full px-3 py-2 mr-auto border-2 border-dashed rounded-md">
+              <div className="flex flex-col w-full h-full mb-2 overflow-y-auto">
+                {repos.length > 0 ? (
+                  repos.map((repo: any) => (
+                    <RepoButton key={repo.name} repo={repo} />
+                  ))
+                ) : (
+                  <div className="m-auto loader"></div>
+                )}
+              </div>
+              <div className="mr-auto text-sm text-transparent bg-clip-text bg-gradient-to-br from-100vh-cyan to-100vh-purple">
+                import from git url ΓåÆ
+              </div>
             </div>
+            <div className="flex flex-col items-center justify-center flex-none w-1/2 h-full p-4 ml-4 text-sm border-2 border-dashed rounded-md">
+              <div className="flex flex-col items-center justify-center flex-1 w-full">
+                <img
+                  src="/images/gradient-image.svg"
+                  className="w-2/5"
+                  alt="gradient image icon"
+                />
+                <ul className="w-5/6 list-disc text-start mt-7">
+                  <li>code (HTML, CSS, JavaScript)</li>
+                  <li>images (png, jpg, gif)</li>
+                </ul>
+                <ul className="w-5/6 list-disc text-start">
+                  <li>videos (mp4, 10mb max)</li>
+                  <li>only upload media you own the rights to</li>
+                </ul>
+              </div>
+              <button className="text-transparent bg-clip-text bg-gradient-to-br from-100vh-cyan to-100vh-purple">
+                drag and drop or browse
+              </button>
+            </div> */}
+          </div>
+          <div className="flex-1 h-full">b</div>
         </div>
-    );
+      </div>
+    </div>
+  );
 }
 
 function RepoButton({ repo }) {
-    return (
-        <div
-            key={repo.name}
-            className="flex items-center justify-between w-full my-1"
-        >
-            <div className="flex items-center text-sm">
-                <p className="mr-1 font-bold">{repo.name}</p>
-                {repo.private ? (
-                    <svg
-                        className="w-5 h-5"
-                        fill="none"
-                        viewBox="0 0 24 24"
-                        stroke="currentColor"
-                    >
-                        <path
-                            strokeLinecap="round"
-                            strokeLinejoin="round"
-                            strokeWidth={1}
-                            d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"
-                        />
-                    </svg>
-                ) : (
-                    <svg
-                        className="w-5 h-5"
-                        fill="none"
-                        viewBox="0 0 24 24"
-                        stroke="currentColor"
-                    >
-                        <path
-                            strokeLinecap="round"
-                            strokeLinejoin="round"
-                            strokeWidth={1}
-                            d="M8 11V7a4 4 0 118 0m-4 8v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2z"
-                        />
-                    </svg>
-                )}
-                <p className="mx-1">┬╖</p>
-                <ReactTimeAgo
-                    date={new Date(repo.updatedAt)}
-                    timeStyle="mini"
-                />
-                <p className="ml-1">ago</p>
-            </div>
-            {/* <button className="px-2 py-1 text-sm font-semibold bg-gradient-to-br from-100vh-cyan to-100vh-purple">
-                import
-            </button> */}
-            <Button100VH
-                styleType={3}
-                label="import"
-                className="px-2 py-1 mr-1"
+  return (
+    <div
+      key={repo.name}
+      className="flex items-center justify-between w-full my-1"
+    >
+      <div className="flex items-center text-sm">
+        <p className="mr-1 font-bold">{repo.name}</p>
+        {repo.private ? (
+          <svg
+            className="w-5 h-5"
+            fill="none"
+            viewBox="0 0 24 24"
+            stroke="currentColor"
+          >
+            <path
+              strokeLinecap="round"
+              strokeLinejoin="round"
+              strokeWidth={1}
+              d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"
             />
-        </div>
-    );
+          </svg>
+        ) : (
+          <svg
+            className="w-5 h-5"
+            fill="none"
+            viewBox="0 0 24 24"
+            stroke="currentColor"
+          >
+            <path
+              strokeLinecap="round"
+              strokeLinejoin="round"
+              strokeWidth={1}
+              d="M8 11V7a4 4 0 118 0m-4 8v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2z"
+            />
+          </svg>
+        )}
+        <p className="mx-1">┬╖</p>
+        <ReactTimeAgo date={new Date(repo.updatedAt)} timeStyle="mini" />
+        <p className="ml-1">ago</p>
+      </div>
+      <Button100VH styleType={3} label="import" className="px-2 py-1 mr-1" />
+    </div>
+  );
 }
